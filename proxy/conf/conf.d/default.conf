# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}
# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server
map $http_upgrade $proxy_connection {
  default upgrade;
  '' close;
}
# ------------------------------------
# base settings
# ------------------------------------
#default_type  text/plain;
server_names_hash_bucket_size 64;
client_body_buffer_size  64k;
tcp_nopush        on;
server_tokens    off;
# ------------------------------------
# gzip compression
# ------------------------------------
gzip_static on;
gzip on;
gzip_http_version 1.0;
gzip_vary on;
gzip_comp_level   1;
gzip_types text/plain 
            text/xml 
            text/css 
            text/javascript
            application/xml 
            application/xml+rss 
            application/xhtml+xml 
            application/rss+xml 
            application/atom_xml 
            application/javascript 
            application/x-javascript 
            application/x-httpd-php 
            application/json;
gzip_disable      "MSIE [1-6]\.";
gzip_disable      "Mozilla/4";
gzip_buffers      4 32k;
gzip_min_length   1100;
gzip_proxied off;
# ------------------------------------
# Log
# ------------------------------------
log_format vhost '$host $remote_addr - $remote_user [$time_local] '
                 '"$request" $status $body_bytes_sent '
                 '"$http_referer" "$http_user_agent"';
#access_log off;
# ------------------------------------
# HTTP header for proxy cache
# ------------------------------------
proxy_http_version      1.1;
proxy_buffering         on;
proxy_buffer_size       8k;
proxy_buffers           100 8k;
proxy_set_header        Host                $host;
proxy_set_header        Upgrade             $http_upgrade;
proxy_set_header        Connection          $proxy_connection;
proxy_set_header        X-Real-IP           $remote_addr;
proxy_set_header        X-Forwarded-Host    $host;
proxy_set_header        X-Forwarded-Server  $host;
proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;
proxy_set_header        X-Forwarded-Proto   $proxy_x_forwarded_proto;
proxy_connect_timeout   60;
proxy_send_timeout      90;
proxy_read_timeout      60;
proxy_temp_path         /var/cache/nginx/tmp 1 2;
# ------------------------------------
# Host settings
# ------------------------------------
server {
	server_name _; # This is just an invalid value which will never trigger on a real hostname.
	listen 80;
	access_log /var/log/nginx/access.log vhost;
	return 503;
}
server {
	server_name _; # This is just an invalid value which will never trigger on a real hostname.
	listen 443 ssl http2;
	access_log /var/log/nginx/access.log vhost;
	return 503;
	ssl_certificate /etc/nginx/certs/default.crt;
	ssl_certificate_key /etc/nginx/certs/default.key;
}
# ------------------------------------
# Virtual host settings for dev.ontheroad.jp
# ------------------------------------
proxy_cache_path /var/cache/nginx/dev.ontheroad.jp levels=1:2 keys_zone=dev.ontheroad.jp:4m inactive=7d max_size=50m;
upstream dev.ontheroad.jp {
			# bin_dev.ontheroad.jp-wordpress_1
			server 172.17.0.7:80;
}
server {
    server_name dev.ontheroad.jp;
    listen 80 ;
    access_log /var/log/nginx/access.log vhost;
    return 301 https://$host$request_uri;
}
server {
	server_name dev.ontheroad.jp;
	listen 443 ssl http2 ;
	access_log /var/log/nginx/access.log vhost;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA;
	ssl_prefer_server_ciphers on;
	ssl_session_timeout 5m;
	ssl_session_cache shared:SSL:50m;
	ssl_certificate /etc/nginx/certs/dev.ontheroad.jp.crt;
	ssl_certificate_key /etc/nginx/certs/dev.ontheroad.jp.key;
	ssl_dhparam /etc/nginx/certs/dev.ontheroad.jp.dhparam.pem;
	add_header Strict-Transport-Security "max-age=31536000";
	include /etc/nginx/vhost.d/default;
    client_max_body_size        20M;
    proxy_connect_timeout       600;
    proxy_send_timeout          600;
    proxy_read_timeout          600;
    send_timeout                600;
    add_header X-Cache $upstream_cache_status;
    #proxy_ignore_headers X-Accel-Redirect X-Accel-Expires Cache-Control Expires Set-Cookie;
	location / {
		proxy_pass http://dev.ontheroad.jp;
        proxy_cache dev.ontheroad.jp;
        #proxy_cache_key $scheme$proxy_host$uri$is_args$args;
        #proxy_cache_key $scheme://$proxy_host$request_uri;
        set $mobilef '';
        if ($http_user_agent ~* '(iPhone|iPod|incognito|webmate|Android.*Mobile|Windows.*Phone|dream|CUPCAKE|blackberry9500|blackberry9530|blackberry9520|blackberry9550|blackberry 9800|webOS|s8000|bada|Googlebot-Mobile|incognito|webmate)') {
             set $mobilef 'mobile.';
        }
        proxy_cache_key "$mobilef$scheme://$host$request_uri";
        proxy_cache_valid       200 2h;
        proxy_cache_valid       302 2h;
        proxy_cache_valid       301 4h;
        proxy_cache_valid       any 1m;
	}
}
